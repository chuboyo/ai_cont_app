version: '3.9'

services:
  app:
    build:
      context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - .:/app
      - ./data/web:/vol/web
    env_file:
      - .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOST=*
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    ports:
            - 5432:5432
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  
  redis:
    image: redis:alpine
  
  celery:
    build: .
    command: celery -A aicontent worker -l info
    volumes:
      - .:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
  celery-beat:
    build: .
    command: celery -A aicontent beat -l info
    volumes:
      - .:/app
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
