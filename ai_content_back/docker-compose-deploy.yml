version: "3.9"

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - static-data:/vol/web
    env_file:
      - .env
    environment:
      - DEBUG=${DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_EMAIL=akojichubiyojo1997@gmail.com
      - DJANGO_SUPERUSER_USERNAME=chuboyo
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  nginx:
    build:
      context: ./nginx
    restart: always
    volumes:
      - static-data:/vol/web
    ports:
      - "80:80"
    depends_on:
      - app

  redis:
    image: redis:alpine
  
  celery:
    build: .
    command: celery -A aicontent worker -l info
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis
  celery-beat:
    build: .
    user: root
    command: celery -A aicontent beat -l info
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - redis


volumes:
  postgres-data:
  static-data: